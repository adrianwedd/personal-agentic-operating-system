services:
  ollama:
    image: ollama/ollama:0.2.0           # ← pin
    ports:
      - "11434:11434"
    volumes:
      - ./data/ollama:/root/.ollama
    container_name: ollama
  qdrant:
    image: qdrant/qdrant:v1.9.0          # ← pin
    container_name: qdrant
    ports: ["6333"]                      # internal only
    volumes:
      - ./data/qdrant:/qdrant/storage
    networks: ["agentnet"]
  langfuse:
    image: ${LANGFUSE_IMAGE:-ghcr.io/langfuse/langfuse:3.74.0}
    container_name: langfuse
    ports: ["3000"]                       # internal only
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      SALT: ${SALT}
      CLICKHOUSE_MIGRATION_URL: ${CLICKHOUSE_MIGRATION_URL:-}
      CLICKHOUSE_URL: ${CLICKHOUSE_URL:-}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-clickhouse}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-""}
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-langfuse}
      CLICKHOUSE_CLUSTER_ENABLED: ${CLICKHOUSE_CLUSTER_ENABLED:-false}
      # keys injected via .env
    # If CLICKHOUSE_URL is empty, onboard.py patches LANGFUSE_IMAGE to 2.58.0-arm64 automatically.
    networks: ["agentnet"]
  postgres:
    image: postgres:16.2-alpine           # ← pin
    container_name: postgres
    ports: ["5432"]                       # internal only
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks: ["agentnet"]
  clickhouse:
    image: clickhouse/clickhouse-server:24.2.3.70-alpine  # ← pin
    container_name: clickhouse
    ports:
      - "8123"                      # HTTP internal
      - "9000"                      # TCP internal
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    volumes:
      - ./data/clickhouse:/var/lib/clickhouse
      - ./logs/clickhouse:/var/log/clickhouse-server
      - ./docker/clickhouse/config.xml:/etc/clickhouse-server/config.d/dev-overrides.xml:ro
      - ./clickhouse-mutation-pool.xml:/etc/clickhouse-server/config.d/10-mutation-pool.xml:ro
    networks: ["agentnet"]
  neo4j:
    image: neo4j:5.20
    container_name: neo4j
    ports: ["7687"]                       # internal only
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD}
    volumes:
      - ./data/neo4j:/data
      - ./constraints.cypher:/docker-entrypoint-initdb.d/constraints.cypher:ro
    networks: ["agentnet"]
  trace-agent:
    build:
      context: .
      dockerfile: trace_agent/Dockerfile
    container_name: trace-agent
    ports:
      - "8000:8000"
    networks: ["agentnet"]
  graph-inspector:
    build:
      context: apps/graph-inspector
      dockerfile: Dockerfile
    container_name: graph-inspector
    depends_on:
      - trace-agent
    ports:
      - "5173:80"
    networks: ["agentnet"]

networks:
  agentnet:
    driver: bridge
