- id: sprint1_ingestion
  description: Build the ingestion pipeline using Gmail and filesystem loaders, split text, generate embeddings, and store them in Qdrant.
  status: done
- id: sprint2_retrieval
  description: Integrate Qdrant retrieval using hybrid search to answer questions from stored documents.
  status: done
- id: sprint3_tool_execution
  description: Add GmailToolkit and GoogleCalendarToolkit to enable the agent to send drafts and schedule events.
  status: done
- id: extend_pkg
  description: Extend retrieval with a Personal Knowledge Graph powered by LLMGraphTransformer.
  status: done
- id: graph_based_planning
  description: Enhance the planner to reference the PKG when decomposing requests.
  status: done
- id: improve_task_management
  description: Improve task management with deterministic rules, LLM prioritization, and human-in-the-loop reflection.
  status: in_progress
- id: neo4j_init_script
  description: Add startup script to install PKG constraints when Neo4j boots.
  status: done
- id: ci_workflow_updates
  description: Extend CI with Neo4j service and publish documentation.
  status: done
- id: docs_pipeline
  description: Create GitHub Pages workflow to deploy MkDocs site.
  status: done

- id: ONB-002
  title: "Add interactive onboarding and first-run stack debugger"
  status: in_progress
  weight: 5
  description: >
    Implement scripts/onboard.py, healthcheck.py, suggest_model.py,
    Makefile targets, env templating, and docker-compose fallback.
  subtasks:
    - Build TUI flow with rich
    - Auto .env patch + LLM provider flags
    - Model detection & pull
    - Stack health check + log diagnostics
    - CI smoke test via `make smoke`
- id: improve_config_management
  description: Enhance the bootstrap.sh script to check for and prompt for missing .env variables. Automate the ClickHouse configuration.
  status: to_do
- id: enhance_planner_sophistication
  description: Improve the planner in agent/nodes.py to handle more complex, multi-step tasks with conditional logic.
  status: to_do
- id: expand_tool_integration
  description: Integrate with a file storage service like Dropbox or Google Drive.
  status: to_do
- id: add_end_to_end_tests
  description: Add more end-to-end tests to simulate user interactions from start to finish.
  status: to_do
- id: improve_error_handling
  description: Add more specific error handling for API responses in the deepseek_client.py and gemini_client.py files.
  status: to_do
- id: enhance_graph_inspector
  description: Enhance the graph-inspector to provide real-time updates on the agent's state and data flowing through the graph.
  status: to_do
- id: write_more_docstrings
  description: Add more detailed docstrings to functions, especially in the agent/nodes.py file.
  status: to_do
